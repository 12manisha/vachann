defmodule Vachan.Repo.Migrations.MigrateResources7 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    rename table(:campaigns), :active, to: :active?

    alter table(:campaigns) do
      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      # remove :status

      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      # remove :text_body

      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      # remove :subject

      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      # remove :reply_to_name

      # Attribute removal has been commented out to avoid data loss. See the migration generator documentation for more
      # If you uncomment this, be sure to also uncomment the corresponding attribute *addition* in the `down` migration
      # remove :reply_to_email

      add :deleted?, :boolean, null: false, default: false
      add :state, :text, null: false, default: "new"
    end

    create table(:campaign_content, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :reply_to_email, :text
      add :reply_to_name, :text
      add :kind, :text
      add :subject, :text, null: false
      add :text_body, :text, null: false

      add :campaign_id,
          references(:campaigns,
            column: :id,
            name: "campaign_content_campaign_id_fkey",
            type: :bigserial,
            prefix: "public"
          )

      add :organization_id,
          references(:organizations,
            column: :id,
            name: "campaign_content_organization_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:campaign_content, "campaign_content_campaign_id_fkey")

    drop constraint(:campaign_content, "campaign_content_organization_id_fkey")

    drop table(:campaign_content)

    alter table(:campaigns) do
      remove :state
      remove :deleted?
      remove :active?
      modify :active, :boolean
      # This is the `down` migration of the statement:
      #
      #     remove :reply_to_email
      #

      # add :reply_to_email, :text
      # This is the `down` migration of the statement:
      #
      #     remove :reply_to_name
      #

      # add :reply_to_name, :text
      # This is the `down` migration of the statement:
      #
      #     remove :subject
      #

      # add :subject, :text, null: false
      # This is the `down` migration of the statement:
      #
      #     remove :text_body
      #

      # add :text_body, :text, null: false
      # This is the `down` migration of the statement:
      #
      #     remove :status
      #

      # add :status, :text, null: false, default: "draft"
    end

    rename table(:campaigns), :active?, to: :active
  end
end
